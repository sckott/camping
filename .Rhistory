length(all_campgrounds)
# each_campground_safe <- plyr::try_default(each_campground, error_list)
all_campgrounds <- unname(Map(each_campground, cgrounds_urls, nms))
# remove those that don't have data
all_campgrounds <- Filter(function(x) NROW(x$dat) > 0, all_campgrounds)
length(all_campgrounds)
ddf <- tbl_df(bind_rows(lapply(all_campgrounds, function(z) {
z$no_sites <- unique(z$no_sites)
if (length(z$no_sites) > 1) z$no_sites <- z$no_sites[1]
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
if (!is.null(df$Restroom)) {
df$Restroom <- gsub("\\(.+", "", df$Restroom)
}
df
})))
ddf
source('~/github/sac/camping/top_level_campground.R')
library(crul)
library(xml2)
library(stringr)
library(dplyr)
source("each_campground.R")
source("top_level_campground.R")
source("natforesturls.R")
wm <- top_level_campground(url = williamette) # FIXME!!!
wm
tp <- wm
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
library(leaflet)
install.packages("leaflet")
library(leaflet)
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$Restroom),
# color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~Restroom, opacity = 1)
# addLegend(pal = palwat, values = ~Water, opacity = 1)
library(htmltools)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$Restroom),
# color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~Restroom, opacity = 1)
# addLegend(pal = palwat, values = ~Water, opacity = 1)
ochoco
oc <- top_level_campground(ochoco)
oc
tp <- oc
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$Restroom),
# color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~Restroom, opacity = 1)
# addLegend(pal = palwat, values = ~Water, opacity = 1)
ss <- top_level_campground(siuslaw)
tp <- ss
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$Restroom),
# color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~Restroom, opacity = 1)
# addLegend(pal = palwat, values = ~Water, opacity = 1)
uq <- top_level_campground(umpqua)
tp <- uq
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$Restroom),
# color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~Restroom, opacity = 1)
# addLegend(pal = palwat, values = ~Water, opacity = 1)
uq
#uq <- top_level_campground(umpqua) # FIXME
de <- top_level_campground(deschutes)
de
de
tp <- de
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$Restroom),
# color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~Restroom, opacity = 1)
# addLegend(pal = palwat, values = ~Water, opacity = 1)
rs <- top_level_campground(rogue_siskiyou)
tp <- rs
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$Restroom),
# color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~Restroom, opacity = 1)
# addLegend(pal = palwat, values = ~Water, opacity = 1)
rs
rs$Restroom
x=rs
tolower(x$Restroom)
x$restroom2 <- tolower(x$Restroom)
tolower(x$Restroom)
x$restroom2
x$restroom2 <- tolower(x$Restroom)
x$restroom2
gsub("toilets?", "", x$restroom2)
x$restroom2 <- gsub("toilets?", "", x$restroom2)
library(stringi)
stringi::stri_trim_both(x$restroom2)
x$restroom2 <- tolower(x$Restroom)
x$restroom2
stringi::stri_replace_all
stringi::stri_replace_all(x$restroom2, "", regex = "toilets?")
x$restroom2 <- stringi::stri_replace_all(x$restroom2, "", regex = "toilets?")
x$restroom2 <- stringi::stri_trim_both(x$restroom2)
x$restroom2
x$restroom2 <- stringi::stri_replace_all(x$restroom2, "flush", regex = "flushing")
x$restroom2 <- stringi::stri_replace_all(x$restroom2, "flush", regex = "flushing")
x$restroom2
unique(x$restroom2)
x$Water
# restroom
x$water2 <- tolower(x$Water)
x$water2
stringi::stri_replace_all(x$water2, "no", regex = "no")
stringi::stri_replace_all(x$water2, "no", regex = "no.+")
x$water2 <- stringi::stri_replace_all(x$water2, "no", regex = "no.+")
clean_categories <- function(x) {
# restroom
x$restroom2 <- tolower(x$Restroom)
x$restroom2 <- stringi::stri_replace_all(x$restroom2, "", regex = "toilets?")
x$restroom2 <- stringi::stri_trim_both(x$restroom2)
x$restroom2 <- stringi::stri_replace_all(x$restroom2, "flush", regex = "flushing")
# restroom
x$water2 <- tolower(x$Water)
x$water2 <- stringi::stri_replace_all(x$water2, "no", regex = "no.+")
# return
return(x)
}
rs <- clean_categories(rs)
tp <- rs
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$Restroom),
# color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~Restroom, opacity = 1)
# addLegend(pal = palwat, values = ~Water, opacity = 1)
tp <- rs
palrest <- colorFactor(palette = 'Dark2', domain = tp$restroom2)
palwat <- colorFactor(palette = 'Dark2', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$restroom2),
# color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~restroom2, opacity = 1)
# addLegend(pal = palwat, values = ~water2, opacity = 1)
gp <- clean_categories(gp)
mh
wm
wm <- clean_categories(wm)
wm <- clean_categories(wm)
tp <- wm
palrest <- colorFactor(palette = 'Dark2', domain = tp$restroom2)
palwat <- colorFactor(palette = 'Dark2', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$restroom2),
# color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~restroom2, opacity = 1)
# addLegend(pal = palwat, values = ~water2, opacity = 1)
gp <- top_level_campground(gifford_pinchot)
gifford_pinchot
gp <- top_level_campground(gifford_pinchot)
mh <- top_level_campground(mthood)
mh <- clean_categories(mh)
tp <- mh
palrest <- colorFactor(palette = 'Dark2', domain = tp$restroom2)
palwat <- colorFactor(palette = 'Dark2', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$restroom2),
# color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~restroom2, opacity = 1)
# addLegend(pal = palwat, values = ~water2, opacity = 1)
url = gifford_pinchot
cli <- crul::HttpClient$new(url, opts = list(verbose = TRUE))
res <- cli$get()
res$raise_for_status()
html1 <- xml2::read_html(res$parse("UTF-8"))
# xml2::write_html(html1, "stuff.html")
cgrounds <- xml_find_all(html1, '//a[contains(text(), "Campground")]')
nms <- unname(vapply(xml_text(cgrounds), function(z) {
if (grepl(":", z)) strsplit(z, ":")[[1]][[2]] else z
}, ""))
nms
cgrounds_hrefs <- xml_attr(cgrounds, "href")
url_pref <- "https://www.fs.usda.gov"
cgrounds_urls <- paste0(url_pref, cgrounds_hrefs)
cgrounds_urls
all_campgrounds <- unname(Map(each_campground, cgrounds_urls, nms))
plyr::llply(cgrounds_urls, each_campground, name = nms, .inform = TRUE)
cgrounds_hrefs
vapply(cgrounds_hrefs, function(x) {
if (grepl("https?", x)) x else paste0(url_pref, cgrounds_hrefs)
})
vapply(cgrounds_hrefs, function(x) {
if (grepl("https?", x)) x else paste0(url_pref, cgrounds_hrefs)
}, "")
vapply(cgrounds_hrefs, function(x) {
if (grepl("https?", x)) x else paste0(url_pref, x)
}, "")
unname(vapply(cgrounds_hrefs, function(x) {
if (grepl("https?", x)) x else paste0(url_pref, x)
}, ""))
cgrounds_urls <- unname(vapply(cgrounds_hrefs, function(x) {
if (grepl("https?", x)) x else paste0(url_pref, x)
}, ""))
source('~/github/sac/camping/top_level_campground.R')
gp <- top_level_campground(url = gifford_pinchot) # FIXME
gp
gp <- clean_categories(gp)
tp <- gp
palrest <- colorFactor(palette = 'Dark2', domain = tp$restroom2)
palwat <- colorFactor(palette = 'Dark2', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$restroom2),
# color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~restroom2, opacity = 1)
# addLegend(pal = palwat, values = ~water2, opacity = 1)
source("helpers.R")
oc
oc <- clean_categories(oc)
oc
tp <- oc
palrest <- colorFactor(palette = 'Dark2', domain = tp$restroom2)
palwat <- colorFactor(palette = 'Dark2', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$restroom2),
# color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~restroom2, opacity = 1)
# addLegend(pal = palwat, values = ~water2, opacity = 1)
ss <- clean_categories(ss)
tp <- ss
palrest <- colorFactor(palette = 'Dark2', domain = tp$restroom2)
palwat <- colorFactor(palette = 'Dark2', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$restroom2),
# color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~restroom2, opacity = 1)
# addLegend(pal = palwat, values = ~water2, opacity = 1)
?colorFactor
colorFactor(domain = tp$restroom2)
palrest <- colorFactor(palette = 'BuPu', domain = tp$restroom2)
palrest <- colorFactor(palette = 'BuPu', domain = tp$restroom2)
palwat <- colorFactor(palette = 'BuPu', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$restroom2),
# color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~restroom2, opacity = 1)
# addLegend(pal = palwat, values = ~water2, opacity = 1)
palrest <- colorFactor(palette = 'RdYlBu', domain = tp$restroom2)
palwat <- colorFactor(palette = 'RdYlBu', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$restroom2),
# color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~restroom2, opacity = 1)
# addLegend(pal = palwat, values = ~water2, opacity = 1)
palrest <- colorFactor(palette = 'RdYlBu', domain = tp$restroom2)
palwat <- colorFactor(palette = 'RdYlBu', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
# color = ~palrest(tp$restroom2),
color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~restroom2, opacity = 1)
addLegend(pal = palwat, values = ~water2, opacity = 1)
de
de <- clean_categories(de)
de
tp <- de
palrest <- colorFactor(palette = 'RdYlBu', domain = tp$restroom2)
palwat <- colorFactor(palette = 'RdYlBu', domain = tp$water2)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
# color = ~palrest(tp$restroom2),
color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~restroom2, opacity = 1)
addLegend(pal = palwat, values = ~water2, opacity = 1)
tp$no_sites
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
# color = ~palrest(tp$restroom2),
color = ~palwat(tp$water2),
radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~restroom2, opacity = 1)
addLegend(pal = palwat, values = ~water2, opacity = 1)
tp$no_sites
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
# color = ~palrest(tp$restroom2),
color = ~palwat(tp$water2),
radius = ~tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~restroom2, opacity = 1)
addLegend(pal = palwat, values = ~water2, opacity = 1)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
# color = ~palrest(tp$restroom2),
color = ~palwat(tp$water2),
radius = ~tp$no_sites,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~restroom2, opacity = 1)
addLegend(pal = palwat, values = ~water2, opacity = 1)
?leaflet
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
# color = ~palrest(tp$restroom2),
color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
radius = ~no_sites,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~restroom2, opacity = 1)
addLegend(pal = palwat, values = ~water2, opacity = 1)
addCircles()
addCircles
?addCircles
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
# color = ~palrest(tp$restroom2),
color = ~palwat(tp$water2),
# radius = tp$no_sites/10,
radius = ~tp$no_sites,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~restroom2, opacity = 1)
addLegend(pal = palwat, values = ~water2, opacity = 1)
leaflet::addCircles
tp$Reservations
