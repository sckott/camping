pal <- colorFactor(palette = 'Dark2', domain = df$Restroom)
leaflet(data = df_uniq) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircleMarkers(
lng = df_uniq$lon,
lat = df_uniq$lat,
opacity = 0.9,
color = ~pal(Restroom),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
)
ddf <- tbl_df(bind_rows(lapply(all_campgrounds, function(z) {
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
df$Restroom <- gsub("\\(.+", "", df$Restroom)
df
})))
pal <- colorFactor(palette = 'Dark2', domain = ddf$Restroom)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircleMarkers(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
color = ~pal(ddf$Restroom),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircleMarkers(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
color = ~pal(ddf$Restroom),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend()
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircleMarkers(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
color = ~pal(ddf$Restroom),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = pal, values = ~Restroom)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircleMarkers(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
color = ~pal(ddf$Restroom),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = pal, values = ~Restroom, opacity = 1)
addLegend
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircleMarkers(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
color = ~pal(ddf$Restroom),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend("bottomright", pal = pal, values = ~Restroom, opacity = 1)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircleMarkers(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
color = ~pal(ddf$Restroom),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = pal, values = ~Restroom, opacity = 1)
palwat <- colorFactor(palette = 'Dark2', domain = ddf$Water)
palwat <- colorFactor(palette = 'Dark2', domain = ddf$Water)
palwat
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircleMarkers(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
# color = ~palrest(ddf$Restroom),
color = ~palwat(ddf$Water),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~Restroom, opacity = 1)
addLegend(pal = palwat, values = ~Water, opacity = 1)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addMarkers(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
# color = ~palrest(ddf$Restroom),
color = ~palwat(ddf$Water),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~Restroom, opacity = 1)
addLegend(pal = palwat, values = ~Water, opacity = 1)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addMarkers(
lng = ddf$lon,
lat = ddf$lat,
# opacity = 0.9,
# color = ~palrest(ddf$Restroom),
color = ~palwat(ddf$Water),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~Restroom, opacity = 1)
addLegend(pal = palwat, values = ~Water, opacity = 1)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addMarkers(
lng = ddf$lon,
lat = ddf$lat,
# opacity = 0.9,
# color = ~palrest(ddf$Restroom),
# color = ~palwat(ddf$Water),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~Restroom, opacity = 1)
addLegend(pal = palwat, values = ~Water, opacity = 1)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addAwesomeMarkers(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
# color = ~palrest(ddf$Restroom),
color = ~palwat(ddf$Water),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~Restroom, opacity = 1)
addLegend(pal = palwat, values = ~Water, opacity = 1)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = ddf$lon,
lat = ddf$lat,
opacity = 0.9,
# color = ~palrest(ddf$Restroom),
color = ~palwat(ddf$Water),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~Restroom, opacity = 1)
addLegend(pal = palwat, values = ~Water, opacity = 1)
leaflet(data = ddf) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = ddf$lon,
lat = ddf$lat,
opacity = 1,
# color = ~palrest(ddf$Restroom),
color = ~palwat(ddf$Water),
# radius = df_uniq$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~Restroom, opacity = 1)
addLegend(pal = palwat, values = ~Water, opacity = 1)
colorFactor
library(crul)
library(xml2)
library(stringr)
library(dplyr)
source("each_campground.R")
source("top_level_campground.R")
source("natforesturls.R")
gp <- top_level_campground(gifford_pinchot)
gp
mthood
mh <- top_level_campground(mthood)
source("each_campground.R")
source("top_level_campground.R")
source("natforesturls.R")
mh <- top_level_campground(mthood)
# mh <- top_level_campground(mthood)
wm <- top_level_campground(williamette)
oc <- top_level_campground(ochoco)
url = mthood
cli <- crul::HttpClient$new(url)
cli
res <- cli$get()
res$raise_for_status()
res
html1 <- xml2::read_html(res$parse("UTF-8"))
html1
cgrounds <- xml_find_all(html1, '//a[contains(text(), "Campground:")]')
cgrounds
html1
xml2::write_html(html1, "stuff.html")
xml_find_all(html1, '//a[contains(text(), "Campground")]')
xml_find_all(html1, '//a[contains(text(), "Campground")]') %>% xml_children
cgrounds <- xml_find_all(html1, '//a[contains(text(), "Campground")]')
cgrounds
nms <- unname(vapply(xml_text(cgrounds), function(z) {
if (grepl(":", z)) strsplit(z, ":")[[1]][[2]] else z
}, ""))
nms
cgrounds_hrefs <- xml_attr(cgrounds, "href")
url_pref <- "https://www.fs.usda.gov"
cgrounds_urls <- paste0(url_pref, cgrounds_hrefs)
cgrounds_urls
source("top_level_campground.R")
mh <- top_level_campground(url = mthood)
url
url = mthood
all_campgrounds
cgrounds_urls
plyr::llply(cgrounds_urls, each_campground, name = nms., .inform = TRUE)
nms
plyr::llply(cgrounds_urls, each_campground, name = nms, .inform = TRUE)
all_campgrounds <- .Last.value
all_campgrounds
tbl_df(bind_rows(lapply(all_campgrounds, function(z) {
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
df$Restroom <- gsub("\\(.+", "", df$Restroom)
df
})))
plyr::llply(all_campgrounds, function(z) {
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
df$Restroom <- gsub("\\(.+", "", df$Restroom)
df
}, .inform = TRUE)
z=all_campgrounds[[3]]
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
df
z$campground
as.numeric(z$latitude)
str_trim(z$campground)
as.numeric(z$longitude)
as.numeric(z$elevation)
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_
if (length(z$no_sites) > 1) z$no_sites <- z$no_sites[1]
z$no_sites
z=all_campgrounds[[3]]
z$no_sites
unique(z$no_sites)
unique(z$no_sites)
z$no_sites <- unique(z$no_sites)
data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
df$Restroom <- gsub("\\(.+", "", df$Restroom)
df
plyr::llply(all_campgrounds, function(z) {
z$no_sites <- unique(z$no_sites)
# if (length(z$no_sites) > 1) z$no_sites <- z$no_sites[1]
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
df$Restroom <- gsub("\\(.+", "", df$Restroom)
df
}, .inform = TRUE)
all_campgrounds[[10]]
z=all_campgrounds[[10]]
z$no_sites
z$no_sites <- unique(z$no_sites)
z$no_sites
z$no_sites <- unique(z$no_sites)
length(z$no_sites)
if (length(z$no_sites) > 1) z$no_sites <- z$no_sites[1]
z$no_sites
plyr::llply(all_campgrounds, function(z) {
z$no_sites <- unique(z$no_sites)
if (length(z$no_sites) > 1) z$no_sites <- z$no_sites[1]
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
df$Restroom <- gsub("\\(.+", "", df$Restroom)
df
}, .inform = TRUE)
z=all_campgrounds[[17]]
z
z$no_sites
unique(z$no_sites)
z$no_sites <- unique(z$no_sites)
if (length(z$no_sites) > 1) z$no_sites <- z$no_sites[1]
z$
z$no_sites
data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
df$as.numeric.str_extract.z.no_sites....0.9...........NA_real_
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
df$Restroom <- gsub("\\(.+", "", df$Restroom)
df$Restroom
df$Restroom
plyr::llply(all_campgrounds, function(z) {
z$no_sites <- unique(z$no_sites)
if (length(z$no_sites) > 1) z$no_sites <- z$no_sites[1]
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
if (!is.null(df$Restroom)) {
df$Restroom <- gsub("\\(.+", "", df$Restroom)
}
df
}, .inform = TRUE)
tbl_df(bind_rows(plyr::llply(all_campgrounds, function(z) {
z$no_sites <- unique(z$no_sites)
if (length(z$no_sites) > 1) z$no_sites <- z$no_sites[1]
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
if (!is.null(df$Restroom)) {
df$Restroom <- gsub("\\(.+", "", df$Restroom)
}
df
}, .inform = TRUE)))
# readr::write_csv(all_campgrounds_df, "all_campgrounds_df.csv")
ddf <- tbl_df(bind_rows(lapply(all_campgrounds, function(z) {
z$no_sites <- unique(z$no_sites)
if (length(z$no_sites) > 1) z$no_sites <- z$no_sites[1]
df <- data.frame(str_trim(z$campground),
as.numeric(z$latitude),
as.numeric(z$longitude),
as.numeric(z$elevation),
as.numeric(str_extract(z$no_sites, "[0-9]+")) %||% NA_real_,
stringsAsFactors = FALSE)
z$dat$X1 <- gsub(":\\s?", "", z$dat$X1)
dat <- t(data.frame(stats::setNames(z$dat$X2, z$dat$X1)))
rownames(dat) <- NULL
df <- stats::setNames(df, c("name", "lat", "lon", "elev", "no_sites"))
df <- cbind(df, dat)
if (!is.null(df$Restroom)) {
df$Restroom <- gsub("\\(.+", "", df$Restroom)
}
df
})))
# readr::write_csv(all_campgrounds_df, "all_campgrounds_df.csv")
library(crul)
library(xml2)
library(stringr)
library(dplyr)
source("each_campground.R")
source("top_level_campground.R")
source("natforesturls.R")
mh <- top_level_campground(url = mthood)
library(crul)
library(xml2)
library(stringr)
library(dplyr)
source("each_campground.R")
source("top_level_campground.R")
source("natforesturls.R")
mh <- top_level_campground(url = mthood)
source("each_campground.R")
mh <- top_level_campground(url = mthood)
mh
tp <- mh
tp <- mh
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
# color = ~palrest(tp$Restroom),
color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~Restroom, opacity = 1)
addLegend(pal = palwat, values = ~Water, opacity = 1)
# map
library(leaflet)
library(htmltools)
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
# color = ~palrest(tp$Restroom),
color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
# addLegend(pal = palrest, values = ~Restroom, opacity = 1)
addLegend(pal = palwat, values = ~Water, opacity = 1)
palrest <- colorFactor(palette = 'Dark2', domain = tp$Restroom)
palwat <- colorFactor(palette = 'Dark2', domain = tp$Water)
leaflet(data = tp) %>%
addProviderTiles("Stamen.Terrain") %>%
leaflet::addCircles(
lng = tp$lon,
lat = tp$lat,
opacity = 1,
color = ~palrest(tp$Restroom),
# color = ~palwat(tp$Water),
# radius = tp$no_sites/10,
popup = ~htmlEscape(name)
) %>%
addLegend(pal = palrest, values = ~Restroom, opacity = 1)
# addLegend(pal = palwat, values = ~Water, opacity = 1)
wm <- top_level_campground(williamette)
